{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeCurve = _interopRequireDefault(require(\"viz-annotation/lib/Connector/type-curve\"));\n\nvar _Connector2 = _interopRequireDefault(require(\"./Connector\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar ConnectorCurve = /*#__PURE__*/function (_Connector) {\n  _inherits(ConnectorCurve, _Connector);\n\n  function ConnectorCurve() {\n    _classCallCheck(this, ConnectorCurve);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConnectorCurve).apply(this, arguments));\n  }\n\n  _createClass(ConnectorCurve, [{\n    key: \"getComponents\",\n    value: function getComponents(_ref) {\n      var curve = _ref.curve,\n          points = _ref.points,\n          x = _ref.x,\n          y = _ref.y,\n          dx = _ref.dx,\n          dy = _ref.dy,\n          radius = _ref.radius,\n          outerRadius = _ref.outerRadius,\n          width = _ref.width,\n          height = _ref.height,\n          editMode = _ref.editMode;\n      var components = (0, _typeCurve.default)({\n        curve: curve,\n        points: points,\n        x: x,\n        y: y,\n        dx: dx,\n        dy: dy,\n        radius: radius,\n        outerRadius: outerRadius,\n        width: width,\n        height: height,\n        editMode: editMode\n      });\n      components.handleKeys = {\n        points: components.handles\n      };\n\n      components.handleFunction = function (h, data) {\n        var p = components.points.slice(0);\n        p[h.index] = [h.x + data.oDeltaX, h.y + data.oDeltaY];\n        return {\n          points: p\n        };\n      };\n\n      return components;\n    }\n  }]);\n\n  return ConnectorCurve;\n}(_Connector2.default);\n\nexports.default = ConnectorCurve;","map":null,"metadata":{},"sourceType":"script"}