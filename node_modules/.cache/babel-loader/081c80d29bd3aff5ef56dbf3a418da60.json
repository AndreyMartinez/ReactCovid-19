{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arcBuilder = exports.pathBuilder = exports.lineBuilder = undefined;\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar lineBuilder = exports.lineBuilder = function lineBuilder(_ref) {\n  var data = _ref.data,\n      _ref$curve = _ref.curve,\n      curve = _ref$curve === undefined ? _d3Shape.curveLinear : _ref$curve,\n      canvasContext = _ref.canvasContext,\n      className = _ref.className,\n      classID = _ref.classID;\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n    builder.pathMethods = lineGen;\n  } else {\n    builder.attrs = {\n      d: lineGen(data)\n    };\n  }\n\n  return builder;\n};\n\nvar pathBuilder = exports.pathBuilder = function pathBuilder(_ref2) {\n  var d = _ref2.d,\n      _ref2$curve = _ref2.curve,\n      curve = _ref2$curve === undefined ? _d3Shape.curveLinear : _ref2$curve,\n      canvasContext = _ref2.canvasContext,\n      className = _ref2.className,\n      classID = _ref2.classID;\n  var lineGen = (0, _d3Shape.line)().curve(curve);\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID\n  };\n\n  if (canvasContext) {\n    lineGen.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: d\n    };\n  }\n\n  return builder;\n};\n\nvar arcBuilder = exports.arcBuilder = function arcBuilder(_ref3) {\n  var data = _ref3.data,\n      canvasContext = _ref3.canvasContext,\n      className = _ref3.className,\n      classID = _ref3.classID;\n  var builder = {\n    type: \"path\",\n    className: className,\n    classID: classID,\n    data: data\n  };\n  var arcShape = (0, _d3Shape.arc)().innerRadius(data.innerRadius || 0).outerRadius(data.outerRadius || data.radius || 2).startAngle(data.startAngle || 0).endAngle(data.endAngle || 2 * Math.PI);\n\n  if (canvasContext) {\n    arcShape.context(canvasContext);\n  } else {\n    builder.attrs = {\n      d: arcShape()\n    };\n  }\n\n  return builder;\n};","map":null,"metadata":{},"sourceType":"script"}