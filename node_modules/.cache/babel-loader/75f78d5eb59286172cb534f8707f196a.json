{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Builder = require(\"../Builder\");\n\nvar _typeLine = require(\"./type-line\");\n\nvar _d3Shape = require(\"d3-shape\");\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar createPoints = function createPoints(offset) {\n  var anchors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var diff = {\n    x: offset.x / (anchors + 1),\n    y: offset.y / (anchors + 1)\n  };\n  var p = [];\n  var i = 1;\n\n  for (; i <= anchors; i++) {\n    p.push([diff.x * i + i % 2 * 20, diff.y * i - i % 2 * 20]);\n  }\n\n  return p;\n};\n\nexports.default = function (_ref) {\n  var curve = _ref.curve,\n      points = _ref.points,\n      x = _ref.x,\n      y = _ref.y,\n      dx = _ref.dx,\n      dy = _ref.dy,\n      radius = _ref.radius,\n      outerRadius = _ref.outerRadius,\n      width = _ref.width,\n      height = _ref.height,\n      editMode = _ref.editMode;\n\n  if (!points || typeof points === \"number\") {\n    points = createPoints({\n      x: dx,\n      y: dy\n    }, points);\n  }\n\n  if (!curve) {\n    curve = _d3Shape.curveCatmullRom;\n  }\n\n  var handles = [];\n\n  if (editMode) {\n    handles = points.map(function (c, i) {\n      return {\n        index: i,\n        x: c[0],\n        y: c[1]\n      };\n    });\n  }\n\n  var data = (0, _typeLine.lineSetup)({\n    x: x,\n    y: y,\n    dx: dx,\n    dy: dy,\n    radius: radius,\n    outerRadius: outerRadius,\n    width: width,\n    height: height\n  });\n  data = [data[0]].concat(_toConsumableArray(points), [data[1]]);\n  var components = [(0, _Builder.lineBuilder)({\n    data: data,\n    curve: curve,\n    className: \"connector\"\n  })];\n  return {\n    components: components,\n    handles: handles,\n    points: points\n  };\n};","map":null,"metadata":{},"sourceType":"script"}