{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _bracket = _interopRequireDefault(require(\"viz-annotation/lib/Subject/bracket\"));\n\nvar _Subject2 = _interopRequireDefault(require(\"./Subject\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SubjectBracket = /*#__PURE__*/function (_Subject) {\n  _inherits(SubjectBracket, _Subject);\n\n  function SubjectBracket() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SubjectBracket);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubjectBracket)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"name\", \"SubjectBracket\");\n\n    return _this;\n  }\n\n  _createClass(SubjectBracket, [{\n    key: \"getComponents\",\n    value: function getComponents(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          _ref$depth = _ref.depth,\n          depth = _ref$depth === void 0 ? 20 : _ref$depth,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? \"square\" : _ref$type,\n          editMode = _ref.editMode;\n      var components = (0, _bracket.default)({\n        height: height,\n        width: width,\n        depth: depth,\n        type: type,\n        editMode: editMode\n      });\n      var handleKeys = {\n        height: height,\n        width: width,\n        depth: depth\n      };\n\n      components.handleFunction = function (h, data) {\n        if (h.key === \"depth\") {\n          return {\n            depth: depth + data[\"oDelta\".concat(h.type)]\n          };\n        } else {\n          return _defineProperty({}, h.key, handleKeys[h.key] + data[h.key === \"width\" ? \"oDeltaX\" : \"oDeltaY\"]);\n        }\n      };\n\n      return components;\n    }\n  }]);\n\n  return SubjectBracket;\n}(_Subject2.default);\n\nexports.default = SubjectBracket;\nSubjectBracket.propTypes = {\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n  depth: _propTypes.default.number,\n  editMode: _propTypes.default.bool\n};","map":null,"metadata":{},"sourceType":"script"}