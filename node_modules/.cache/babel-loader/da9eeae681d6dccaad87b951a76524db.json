{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Builder = require(\"../Builder\");\n\nexports.default = function (_ref) {\n  var _ref$radius = _ref.radius,\n      radius = _ref$radius === undefined ? 14 : _ref$radius,\n      leftRight = _ref.leftRight,\n      topBottom = _ref.topBottom,\n      text = _ref.text,\n      color = _ref.color,\n      editMode = _ref.editMode;\n  var handles = [];\n  var components = [];\n  var innerRadius = radius * 0.7;\n  var x = 0;\n  var y = 0;\n  var notCornerOffset = Math.sqrt(2) * radius;\n  var placement = {\n    xleftcorner: -radius,\n    xrightcorner: radius,\n    ytopcorner: -radius,\n    ybottomcorner: radius,\n    xleft: -notCornerOffset,\n    xright: notCornerOffset,\n    ytop: -notCornerOffset,\n    ybottom: notCornerOffset\n  };\n\n  if (leftRight && !topBottom) {\n    x = placement[\"x\" + leftRight];\n  } else if (topBottom && !leftRight) {\n    y = placement[\"y\" + topBottom];\n  } else if (leftRight && topBottom) {\n    x = placement[\"x\" + leftRight + \"corner\"];\n    y = placement[\"y\" + topBottom + \"corner\"];\n  }\n\n  var transform = \"translate(\" + x + \", \" + y + \")\";\n  var circlebg = (0, _Builder.arcBuilder)({\n    className: \"subject\",\n    data: {\n      radius: radius\n    }\n  });\n  circlebg.attrs.transform = transform;\n  circlebg.attrs.fill = color;\n  circlebg.attrs[\"stroke-linecap\"] = \"round\";\n  circlebg.attrs[\"stroke-width\"] = \"3px\";\n  var circle = (0, _Builder.arcBuilder)({\n    className: \"subject-ring\",\n    data: {\n      outerRadius: radius,\n      innerRadius: innerRadius\n    }\n  });\n  circle.attrs.transform = transform;\n  circle.attrs[\"stroke-width\"] = \"3px\";\n  circle.attrs.fill = \"white\";\n  var pointer = void 0;\n\n  if (x && y || !x && !y) {\n    pointer = (0, _Builder.lineBuilder)({\n      className: \"subject-pointer\",\n      data: [[0, 0], [x || 0, 0], [0, y || 0], [0, 0]]\n    });\n  } else if (x || y) {\n    var notCornerPointerXY = function notCornerPointerXY(v) {\n      var sign = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return v && v / Math.sqrt(2) / Math.sqrt(2) || sign * radius / Math.sqrt(2);\n    };\n\n    pointer = (0, _Builder.lineBuilder)({\n      className: \"subject-pointer\",\n      data: [[0, 0], [notCornerPointerXY(x), notCornerPointerXY(y)], [notCornerPointerXY(x, -1), notCornerPointerXY(y, -1)], [0, 0]]\n    });\n  }\n\n  if (pointer) {\n    pointer.attrs.fill = color;\n    pointer.attrs[\"stroke-linecap\"] = \"round\";\n    pointer.attrs[\"stroke-width\"] = \"3px\";\n    components.push(pointer);\n  }\n\n  if (editMode) {\n    var bHandles = {\n      x: x * 2,\n      y: y * 2,\n      offsetParent: true\n    };\n\n    if (!bHandles.x && !bHandles.y) {\n      bHandles.y = -radius;\n    }\n\n    handles = [bHandles];\n  }\n\n  var textNode = void 0;\n\n  if (text) {\n    textNode = {\n      type: \"text\",\n      className: \"badge-text\",\n      attrs: {\n        fill: \"white\",\n        stroke: \"none\",\n        \"font-size\": \".7em\",\n        text: text,\n        \"text-anchor\": \"middle\",\n        dy: \".25em\",\n        x: x,\n        y: y\n      }\n    };\n  }\n\n  components.push(circlebg);\n  components.push(circle);\n  components.push(textNode);\n  return {\n    components: components,\n    handles: handles\n  };\n};","map":null,"metadata":{},"sourceType":"script"}