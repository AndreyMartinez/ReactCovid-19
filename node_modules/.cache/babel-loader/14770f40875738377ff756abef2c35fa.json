{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Builder = require(\"../Builder\"); //This curly brace function was\n//made by Alex Hornbake\n//http://bl.ocks.org/alexhornbake/6005176\n\n\nfunction makeCurlyBrace(x1, y1, x2, y2, w, q) {\n  //Calculate unit vector\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  dx = dx / len;\n  dy = dy / len; //Calculate Control Points of path,\n\n  var qx1 = x1 + q * w * dy;\n  var qy1 = y1 - q * w * dx;\n  var qx2 = x1 - 0.25 * len * dx + (1 - q) * w * dy;\n  var qy2 = y1 - 0.25 * len * dy - (1 - q) * w * dx;\n  var tx1 = x1 - 0.5 * len * dx + w * dy;\n  var ty1 = y1 - 0.5 * len * dy - w * dx;\n  var qx3 = x2 + q * w * dy;\n  var qy3 = y2 - q * w * dx;\n  var qx4 = x1 - 0.75 * len * dx + (1 - q) * w * dy;\n  var qy4 = y1 - 0.75 * len * dy - (1 - q) * w * dx;\n  return \"M \" + x1 + \" \" + y1 + \" Q \" + qx1 + \" \" + qy1 + \" \" + qx2 + \" \" + qy2 + \" T \" + tx1 + \" \" + ty1 + \" M \" + x2 + \" \" + y2 + \" Q \" + qx3 + \" \" + qy3 + \" \" + qx4 + \" \" + qy4 + \" T \" + tx1 + \" \" + ty1;\n}\n\nexports.default = function (_ref) {\n  var height = _ref.height,\n      width = _ref.width,\n      depth = _ref.depth,\n      type = _ref.type,\n      editMode = _ref.editMode;\n  var handles = [];\n  var data = void 0;\n  var bracket = void 0;\n  var w = 0,\n      h = 0;\n\n  if (height && height > 0) {\n    h = height;\n  } else if (width && width > 0) {\n    w = width;\n  }\n\n  if (type === \"square\") {\n    if (h) {\n      data = [[0, 0], [depth, 0], [depth, h], [0, h]];\n    } else if (w) {\n      data = [[0, 0], [0, depth], [w, depth], [w, 0]];\n    }\n\n    bracket = (0, _Builder.lineBuilder)({\n      data: data,\n      className: \"subject\"\n    });\n  } else if (type === \"curly\") {\n    bracket = (0, _Builder.pathBuilder)({\n      d: makeCurlyBrace(0, 0, w, h, h > 0 || w < 0 ? -depth : depth, 0.55),\n      className: \"subject\"\n    });\n  }\n\n  if (editMode) {\n    handles = [{\n      x: h ? depth : w / 2,\n      y: h ? h / 2 : depth,\n      key: \"depth\",\n      type: h ? \"X\" : \"Y\"\n    }, {\n      x: w || 0,\n      y: h || 0,\n      key: h ? \"height\" : \"width\"\n    }];\n  }\n\n  bracket.attrs[\"fill-opacity\"] = 0.1;\n  return {\n    components: [bracket],\n    handles: handles\n  };\n};","map":null,"metadata":{},"sourceType":"script"}