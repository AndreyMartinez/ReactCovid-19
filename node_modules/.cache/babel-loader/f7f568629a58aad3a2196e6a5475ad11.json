{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Annotation = _interopRequireDefault(require(\"./Annotation\"));\n\nvar _classnames = _interopRequireDefault(require(\"./classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar EditableAnnotation = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditableAnnotation, _React$Component);\n\n  function EditableAnnotation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditableAnnotation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditableAnnotation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      x: 0,\n      y: 0,\n      dx: 0,\n      dy: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(EditableAnnotation, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        x: this.props.x,\n        y: this.props.y,\n        dx: this.props.dx,\n        dy: this.props.dy\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        x: nextProps.x,\n        y: nextProps.y,\n        dx: nextProps.dx,\n        dy: nextProps.dy\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return Object.assign({}, this.props, this.state);\n    }\n  }, {\n    key: \"dragEnd\",\n    value: function dragEnd() {\n      if (this.props.onDragEnd) {\n        this.props.onDragEnd(this.getData());\n      }\n    }\n  }, {\n    key: \"dragStart\",\n    value: function dragStart() {\n      if (this.props.onDragStart) {\n        this.props.onDragStart(this.getData());\n      }\n    }\n  }, {\n    key: \"dragSubject\",\n    value: function dragSubject(event, data) {\n      var _this2 = this;\n\n      this.setState({\n        x: this.state.x + data.deltaX,\n        y: this.state.y + data.deltaY\n      }, function () {\n        if (_this2.props.onDrag) _this2.props.onDrag(_this2.getData());\n      });\n    }\n  }, {\n    key: \"dragConnectorSettings\",\n    value: function dragConnectorSettings(event, data) {\n      var _this3 = this;\n\n      this.setState(data, function () {\n        if (_this3.props.onDrag) _this3.props.onDrag(_this3.getData());\n      });\n    }\n  }, {\n    key: \"dragSubjectSettings\",\n    value: function dragSubjectSettings(event, data) {\n      var _this4 = this;\n\n      this.setState(data, function () {\n        if (_this4.props.onDrag) _this4.props.onDrag(_this4.getData());\n      });\n    }\n  }, {\n    key: \"dragNote\",\n    value: function dragNote(event, data) {\n      var _this5 = this;\n\n      this.setState({\n        dx: this.state.dx + data.deltaX,\n        dy: this.state.dy + data.deltaY\n      }, function () {\n        if (_this5.props.onDrag) _this5.props.onDrag(_this5.getData());\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cleanedProps = Object.assign({}, this.props, _objectSpread({}, this.state, {\n        dragSubject: this.dragSubject.bind(this),\n        dragNote: this.dragNote.bind(this),\n        dragSubjectSettings: this.dragSubjectSettings.bind(this),\n        dragConnectorSettings: this.dragConnectorSettings.bind(this),\n        dragEnd: this.dragEnd.bind(this),\n        dragStart: this.dragStart.bind(this),\n        editMode: true,\n        className: (0, _classnames.default)(this.props.className, \"editable\")\n      }));\n      return _react.default.createElement(_Annotation.default, cleanedProps);\n    }\n  }]);\n\n  return EditableAnnotation;\n}(_react.default.Component);\n\nexports.default = EditableAnnotation;","map":null,"metadata":{},"sourceType":"script"}