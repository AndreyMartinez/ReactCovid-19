{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BracketNote;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Note = _interopRequireDefault(require(\"./Note\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction BracketNote(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      depth = _ref.depth,\n      rest = _objectWithoutProperties(_ref, [\"width\", \"height\", \"depth\"]);\n\n  var dx = rest.dx,\n      orientation,\n      align = \"middle\",\n      dy = rest.dy;\n\n  if (height) {\n    if (!dy) dy = height / 2;\n    if (!dx) dx = depth;\n    orientation = \"leftRight\";\n  } else if (width) {\n    if (!dx) dx = width / 2;\n    if (!dy) dy = depth;\n    orientation = \"topBottom\";\n  }\n\n  return _react.default.createElement(_Note.default, _extends({\n    align: align,\n    orientation: orientation,\n    padding: 10\n  }, rest, {\n    editMode: false,\n    dx: dx,\n    dy: dy\n  }));\n}","map":null,"metadata":{},"sourceType":"script"}