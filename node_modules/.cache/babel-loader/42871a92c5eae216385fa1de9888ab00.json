{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Handle = _interopRequireDefault(require(\"../Handle\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Connector = /*#__PURE__*/function (_React$Component) {\n  _inherits(Connector, _React$Component);\n\n  function Connector() {\n    _classCallCheck(this, Connector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Connector).apply(this, arguments));\n  }\n\n  _createClass(Connector, [{\n    key: \"getComponents\",\n    value: function getComponents() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          color = _this$props.color,\n          dx = _this$props.dx,\n          dy = _this$props.dy,\n          customID = _this$props.customID,\n          editMode = _this$props.editMode;\n\n      if (dx === 0 && dy === 0) {\n        return _react.default.createElement(\"g\", {\n          className: \"annotation-connector\"\n        });\n      }\n\n      var d = this.getComponents(this.props) || [];\n      var cleanedProps = Object.assign({}, this.props);\n      delete cleanedProps.children;\n\n      var childrenWithProps = _react.default.Children.map(this.props.children, function (child) {\n        return _react.default.cloneElement(child, _objectSpread({}, cleanedProps, child.props, {\n          scale: cleanedProps.endScale || child.props.endScale,\n          lineData: d.components[0].data\n        }));\n      });\n\n      var handles;\n\n      if (editMode && d.handles && d.handles.length > 0) {\n        handles = d.handles.map(function (h, i) {\n          return _react.default.createElement(_Handle.default, {\n            key: \"connectorhandle-\".concat(i),\n            handleStart: _this.props.dragStart,\n            handleStop: _this.props.dragEnd,\n            x: h.x,\n            y: h.y,\n            offsetParent: h.offsetParent && _this.connector,\n            handleDrag: function handleDrag(e, data) {\n              _this.props.dragConnectorSettings(e, d.handleFunction(h, data));\n            }\n          });\n        });\n      }\n\n      return _react.default.createElement(\"g\", _extends({\n        className: \"annotation-connector\"\n      }, this.props.gAttrs), d.components && d.components.map(function (c, i) {\n        var attrs = {};\n        if (!c) return null;\n        Object.keys(c.attrs).forEach(function (k) {\n          if (c.attrs[k] && k !== \"text\") {\n            attrs[k.replace(/-([a-z])/g, function (g) {\n              return g[1].toUpperCase();\n            })] = c.attrs[k];\n          }\n        });\n        return _react.default.createElement(c.type, _extends({\n          mask: customID ? \"url(#\".concat(customID, \")\") : undefined,\n          key: i,\n          className: c.className,\n          fill: \"none\",\n          stroke: color\n        }, attrs), c.attrs.text);\n      }), childrenWithProps, handles);\n    }\n  }]);\n\n  return Connector;\n}(_react.default.Component);\n\nexports.default = Connector;","map":null,"metadata":{},"sourceType":"script"}