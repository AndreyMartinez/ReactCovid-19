{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Annotation = _interopRequireDefault(require(\"../Annotation\"));\n\nvar _EditableAnnotation = _interopRequireDefault(require(\"../EditableAnnotation\"));\n\nvar _ConnectorLine = _interopRequireDefault(require(\"../Connector/ConnectorLine\"));\n\nvar _ConnectorElbow = _interopRequireDefault(require(\"../Connector/ConnectorElbow\"));\n\nvar _ConnectorCurve = _interopRequireDefault(require(\"../Connector/ConnectorCurve\"));\n\nvar _ConnectorEndDot = _interopRequireDefault(require(\"../Connector/ConnectorEndDot\"));\n\nvar _ConnectorEndArrow = _interopRequireDefault(require(\"../Connector/ConnectorEndArrow\"));\n\nvar _Subject = _interopRequireDefault(require(\"../Subject/Subject\"));\n\nvar _Note = _interopRequireDefault(require(\"../Note/Note\"));\n\nvar _JSXNote = _interopRequireDefault(require(\"../Note/JSXNote\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getAnnotationType = function getAnnotationType(editMode) {\n  return editMode ? _EditableAnnotation.default : _Annotation.default;\n};\n\nfunction _default(props, Connector) {\n  var NoteDefaultProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var Subject = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _Subject.default;\n  var SubjectDefaultProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var NoteType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _Note.default;\n  var _props$disable = props.disable,\n      disable = _props$disable === void 0 ? [] : _props$disable,\n      connector = props.connector,\n      note = props.note,\n      subject = props.subject,\n      x = props.x,\n      y = props.y,\n      dx = props.dx,\n      dy = props.dy,\n      nx = props.nx,\n      ny = props.ny,\n      color = props.color,\n      className = props.className,\n      onDrag = props.onDrag,\n      onDragStart = props.onDragStart,\n      onDragEnd = props.onDragEnd,\n      editMode = props.editMode,\n      events = props.events;\n  var CONNECTORS = {\n    type: {\n      curve: _ConnectorCurve.default,\n      line: _ConnectorLine.default,\n      elbow: _ConnectorElbow.default\n    },\n    end: {\n      dot: _ConnectorEndDot.default,\n      arrow: _ConnectorEndArrow.default\n    }\n  };\n  var ConnectorType, ConnectorEndType;\n\n  if (disable.indexOf(\"connector\") === -1) {\n    ConnectorType = connector && CONNECTORS.type[connector.type] || Connector;\n    ConnectorEndType = connector && CONNECTORS.end[connector.end];\n  }\n\n  var AnnotationType = getAnnotationType(props.editMode);\n  return _react.default.createElement(AnnotationType, _extends({\n    x: x,\n    y: y,\n    dx: dx,\n    dy: dy,\n    nx: nx,\n    ny: ny,\n    color: color,\n    className: className,\n    onDrag: onDrag,\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd,\n    editMode: editMode\n  }, SubjectDefaultProps, subject, {\n    events: events\n  }), ConnectorType && _react.default.createElement(ConnectorType, connector, ConnectorEndType && _react.default.createElement(ConnectorEndType, null)), Subject && disable.indexOf(\"subject\") === -1 && _react.default.createElement(Subject, null), note && disable.indexOf(\"note\") === -1 && (_react.default.isValidElement(note) || typeof note === \"function\" ? _react.default.createElement(_JSXNote.default, {\n    noteDefaultProps: NoteDefaultProps,\n    note: note\n  }) : _react.default.createElement(NoteType, _extends({}, NoteDefaultProps, note))));\n}","map":null,"metadata":{},"sourceType":"script"}